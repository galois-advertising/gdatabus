PROJECT(gdatabus)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-Bsymbolic")
MESSAGE("CMAKE_SHARED_LINKER_FLAGS: ${CMAKE_SHARED_LINKER_FLAGS}")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -std=c++17 -fno-strict-aliasing -Wno-register")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -std=c++17 -fno-strict-aliasing -Wno-register")
SET(CMAKE_BUILD_TYPE "Release")
#set(CMAKE_BUILD_TYPE "Debug")

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/common/util/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/common/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/loader")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}/common")
FIND_PACKAGE(Protobuf REQUIRED)
INCLUDE_DIRECTORIES(${Protobuf_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

EXECUTE_PROCESS(COMMAND protoc 
    -I=${PROJECT_SOURCE_DIR}
    --cpp_out=${PROJECT_BINARY_DIR}
    ${PROJECT_SOURCE_DIR}/common/dbschema/freyja/databus_event.proto)

SET(SRCS
"${CMAKE_CURRENT_BINARY_DIR}/common/dbschema/freyja/databus_event.pb.cc"
"${PROJECT_SOURCE_DIR}/test/main.cpp" 
)

ADD_EXECUTABLE(gdatabus_test ${SRCS})
target_link_libraries(gdatabus_test ${Protobuf_LIBRARIES})
